{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","grumpy-cat.jpg","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Middle.tsx","p2-homeworks/h5/pages/Senior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Message","props","className","classes","canvas","src","avatar","ava","form","name","message","time","messageData","HW1","Affair","s","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","p","filterAffairs","d","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","notError","value","onChange","button","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","all","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","entered","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","require","alt","bg","homepage","to","PATH","PRE_JUNIOR","SuperSelect","options","onChangeOption","mappedOptions","o","i","selected","target","SuperRadio","onChangeCallback","Radio","color","arr","HW7","onChangeOptionHandler","Junior","Middle","Senior","String","fromCodePoint","JUNIOR","MIDDLE","SENIOR","Routes","path","exact","render","Header","nav","item","activeClassName","activeLink","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0e78c819.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Message_canvas__DfXIL\",\"form\":\"Message_form__1Tdb1\",\"ava\":\"Message_ava__1NPEd\",\"name\":\"Message_name__1sDu7\",\"time\":\"Message_time__3nFEy\",\"message\":\"Message_message__1w6u1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Greeting_all__14FEN\",\"notError\":\"Greeting_notError__21pgJ\",\"error\":\"Greeting_error__eQWmP\",\"button\":\"Greeting_button__25Dqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__HTItE\",\"errorInput\":\"SuperInputText_errorInput__2HJM6\",\"error\":\"SuperInputText_error__1Y267\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Affairs_name__2qT4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3o5Mh\",\"column\":\"HW4_column__eqpEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3v85W\",\"red\":\"SuperButton_red__6KwcD\",\"spanSix\":\"SuperButton_spanSix__1Tfj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2nrJ-\",\"spanClassName\":\"SuperCheckbox_spanClassName__1aN47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2QGO6\"};","module.exports = __webpack_public_path__ + \"static/media/grumpy-cat.5bb062c0.jpg\";","import React from 'react';\nimport classes from './Message.module.css'\n\ntype PropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: PropsType) {\n    return (\n            <div className={classes.canvas}>\n                <img src={props.avatar} className={classes.ava}/>\n                <div className={classes.form}>\n                    <div className={classes.name}>{props.name}</div>\n                    <div className={classes.message}>{props.message}</div>\n                    <div className={classes.time}> {props.time} </div>\n                </div>\n                </div>\n                );\n                }\n\n                export default Message;\n","import React from \"react\";\nimport Message from './Message';\n\nconst messageData = {\n    avatar: \"https://klike.net/uploads/posts/2019-07/1564314090_3.jpg\",\n    name: \"Kit Kat\",\n    message: \"Whats up, bro?\",\n    time: \"23:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            {/*should work (должно работать)*/}\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from './HW2';\nimport s from './Affairs.module.css'\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\n    return (\n        <div>\n           <span className={s.name}>{props.affair.name}</span>\n            <span className={s.name}>{props.affair.priority}</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from './HW2';\n\ntype AffairsPropsType = { // need to fix any\n    data:Array<AffairType>\n    setFilter: (f:FilterType) => void //?\n    deleteAffairCallback: (_id: number) => void //?\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () =>{props.setFilter(\"middle\")};\n    const setLow = () =>{props.setFilter(\"low\")};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from 'react';\nimport Affairs from './Affairs';\nimport AlternativeAffairs from './AlternativeAffairs';\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' ; // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: AffairPriorityType\n}\n\n// need to fix any\nexport type FilterType = 'all' | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs;\n    else if (filter === 'high') {\n        return affairs.filter(p => p.priority == 'high')\n    } else if (filter === 'middle') {\n        return affairs.filter(p => p.priority == 'middle')\n    } else if (filter === 'low') {\n        return affairs.filter(p => p.priority == 'low')\n    }\n    return affairs;\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    // need to fix any\n    return affairs.filter(d => d._id !==_id); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all');\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n\n            />\n\n            <hr/>\n          {/*  для личного творчества, могу проверить*/}\n         {/*   <AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from 'react';\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = !error ? s.notError:s.error // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback}  className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser} className={s.button}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from 'react';\nimport Greeting from './Greeting';\nimport {UserType} from './HW3';\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value);\n        setError('')\n    };\n    const addUser = () => {\n        if (name.trim() === '') {\n            setError('You entered an empty value')\n        } else {\n\n            alert(`Hello ${name.trim()} !`)\n            addUserCallback(name)\n            setName('')\n           /* setError('')*/\n        }\n        // need to fix*/\n    };\n\n    const totalUsers:number = users.length;\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from 'uuid';\nimport s from \"./Greeting.module.css\";\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);\n\n    const addUserCallback= (name: string) => {\n        let newUser: UserType = {_id: v1(), name: name}\n        setUsers([newUser,...users]); // need to fix\n    }\n\n    return (\n        <div className={s.all}>\n            <hr/>\n            Enter Your Name\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}  />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    { value,\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName=`${error ? s.errorInput:s.superInput} ${className ? className:\"\"}`\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked ???????????????????????\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                   className={s.blue} // проверьте, рабоет ли смешивание классов//\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText';\r\nimport s from './../../../h5/Header.module.css'\r\nimport {callbackify} from 'util';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode(); // выключить editMode при нажатии Enter\r\n        setEditMode(false);\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false);\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode(); // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.entered} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\n\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState(\"editable-span-value\", value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text here...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from '../../h6/HW6';\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React from \"react\";\nimport s from  './../Header.module.css'\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../Routes';\n\n\n\nfunction Error404() {\n    return (\n        <div>\n            <img src={require('./../../../grumpy-cat.jpg')}  alt=\"here is a cat\" className={s.bg}/>\n            <div className={s.homepage}> Please, return at\n                <span>\n                    <NavLink to={PATH.PRE_JUNIOR}> HOMEPAGE </NavLink>\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\r\nimport {v1} from 'uuid';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[] | undefined\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) => {\r\n        return (<option key={i} value={o} selected={o}>{o}</option>)}) : []//what is it?????\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.target.value)\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport {Checkbox, Radio} from '@material-ui/core';\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e:ChangeEvent<HTMLInputElement>) => {\r\n        onChangeOption && onChangeOption(e.target.value)\r\n\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => {\r\n        return (\r\n            (\r\n                <label key={name + '-' + i}>\r\n                    <Radio\r\n                        checked={o === value}\r\n                        onChange={onChangeCallback}\r\n                        value={o}\r\n                        color=\"default\"\r\n                        name={name}\r\n                    />\r\n                    {o}\r\n                </label>\r\n            )\r\n        )\r\n    }) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {useState} from 'react';\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect';\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio';\r\n\r\nconst arr = ['x', 'y', 'z'];\r\n\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[0]);\r\n\r\n    const onChangeOptionHandler = (value: string) => {\r\n        onChangeOption(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOptionHandler}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOptionHandler}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","import React from \"react\";\nimport HW7 from '../../h7/HW7';\n\nfunction Junior() {\n    return (\n        <div>\n            <h1>HELLO!</h1>\n            <HW7/>\n        </div>\n    );\n}\n\nexport default Junior;\n","import React from \"react\";\n\nfunction Middle() {\n    return (\n        <div>\n            <h1>What's up?</h1>\n        </div>\n    );\n}\n\nexport default Middle;\n","import React from \"react\";\n\nfunction Senior() {\n    return (\n        <div>\n           <h1>my CSS is beautiful, isn't it? { String.fromCodePoint(128569)}</h1>\n\n        </div>\n    );\n}\n\nexport default Senior;\n","import React from 'react';\nimport {Switch, Route, Redirect, BrowserRouter} from 'react-router-dom';\nimport PreJunior from './pages/PreJunior';\nimport Error404 from './pages/Error404';\nimport Junior from './pages/Junior';\nimport Middle from './pages/Middle';\nimport Senior from './pages/Senior';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n    JUNIOR: '/junior',\n    MIDDLE: '/middle',\n    SENIOR: '/senior'\n\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут  //can be <BrowserRouter>*/}\n            <Switch>\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                // add routes\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.MIDDLE} render={() => <Middle/>}/>\n                <Route path={PATH.SENIOR} render={() => <Senior/>}/>\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport {NavLink} from 'react-router-dom';\nimport s from  './Header.module.css'\nimport {PATH} from './Routes';\nfunction Header() {\n    return (\n        <div>\n                <nav className={s.nav}>\n                <span className={s.item}>\n                    <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.activeLink}>PRE_JUNIOR</NavLink>\n                </span>\n                <span className={s.item}>\n                    <NavLink to={PATH.JUNIOR} activeClassName={s.activeLink}>JUNIOR</NavLink>\n                </span>\n                <span className={s.item}>\n                    <NavLink to={PATH.MIDDLE} activeClassName={s.activeLink}>MIDDLE</NavLink>\n                </span>\n                <span className={s.item}>\n                    <NavLink to={PATH.SENIOR} activeClassName={s.activeLink}>SENIOR</NavLink>\n                </span>\n            </nav>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from 'react-router-dom';\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n            <Header/>\n            <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from 'react';\nimport s from './App.module.css';\nimport HW5 from '../../../p2-homeworks/h5/HW5';\nimport 'react-router-dom';\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:  </div>\n            {/* <HW1/>\n            <HW2/>*/}\n            {/*   <HW3/>*/}\n            {/*   <HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1QGQa\",\"item\":\"Header_item__1gBYG\",\"activeLink\":\"Header_activeLink__2ANXR\",\"bg\":\"Header_bg__1CH_4\",\"homepage\":\"Header_homepage__1SrhS\",\"entered\":\"Header_entered___Dnz7\"};"],"sourceRoot":""}